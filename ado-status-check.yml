name: ADO QA Status Check

# The workflow is triggered by an external repository_dispatch event
on:
  repository_dispatch:
    types: [ado_work_item_updated]

jobs:
  update-pr-status:
    # This job will only run if the event type matches the one from ADO
    runs-on: ubuntu-latest

    # Set permissions for the GITHUB_TOKEN
    permissions:
      pull-requests: write
      statuses: write

    steps:
      - name: Parse ADO Payload
        id: parse_payload
        env:
          PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        run: |
          # Use `jq` to parse the JSON and extract the PR ID
          # The ADO payload might contain the PR number in a different key.
          # You might need to adjust this to match the payload from step 1.
          echo "::notice::Received payload: $PAYLOAD"
          
          # This example assumes the PR ID is sent directly in the payload
          PR_ID=$(echo "$PAYLOAD" | jq -r '.pull_request_id')
          if [ -z "$PR_ID" ]; then
            echo "::error::Could not find a pull request ID in the payload."
            exit 1
          fi
          
          echo "::set-output name=pr_id::$PR_ID"

      - name: Update Pull Request Status Check
        if: success() && steps.parse_payload.outputs.pr_id != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Use the GitHub CLI to set the status check
          # Install the GitHub CLI if it's not on the runner by default.
          # gh pr checks <PR_ID> --pass --context "QA Check"
          # Or, if you want a more controlled check with a specific URL:
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.event.client_payload.pull_request_id }} \
            -f state='success' \
            -f context='QA Check' \
            -f description='QA check passed via ADO work item status change' \
            -f target_url='https://dev.azure.com/your-ado-org/_workitems/edit/${{ github.event.client_payload.work_item_id }}'
